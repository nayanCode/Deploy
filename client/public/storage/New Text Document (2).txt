class Solution {
public:
int ans;
int solve(int i,int j,int n,int m,vector<vector<int>>& grid,vector<vector<int>>&dp,int sum){
       if(i==n-1 && j==m-1)
       ans=min(ans,sum+grid[i][j]);
       if(i>=n || j>=m || i<0 || j<0)
       return ;
       if(dp[i][j]!=INT_MAX)
       return dp[i][j];

      
      int right=grid[i][j]+ solve(i,j+1,n,m,grid,dp);
     int left=grid[i][j]+  solve(i+1,j,n,m,grid,dp);


    }
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size(),n=grid[0].size();
        ans=INT_MAX;
        vector<vector<int>>dp(m,vector<int>(n,INT_MAX));
       solve(0,0,m,n,grid,dp,0);
    return ans;
    }
};